#package "pietra.ast.stmt"
use selfhost::Ast{Expr}

IFNODE :: {
    cond:   *Expr
    block:  *Vector
}
StmtIf :: {
    ifNode:     *IFNODE
    elifs:      *Vector
    else_block: *Vector
}
StmtVal :: union {
    expr: *Expr
    if:   StmtIf
}

STMT_NONE   :: 0
STMT_EXPR   :: 1
Stmt :: {
    kind:   i64 
    val:    StmtVal
}

__stmt_init :: (kind: i64): *Stmt{
    s: *Stmt    = std_arena.alloc(sizeof(Stmt))
    s.kind      = kind;
    return s;
}

make_stmt_expr :: (e: *Expr): *Stmt{
    s: *Stmt = __stmt_init(STMT_EXPR);
    s.val.expr = e;
    return s;
}

print_stmt :: (s: *Stmt) {
    if s.kind == STMT_EXPR {
        puts("<Stmt: Expr> ")
        print_expr(s.val.expr)
        return null
    }
    puts("IDK HOW TO PRINT THIS STMT KIND!!!.\n");
    exit(1)
}