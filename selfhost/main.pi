use std{std}
use selfhost{lexer, parser, cursor}
use selfhost{compiler}
use selfhost{resolver}
use selfhost{Asmx86_64}

usage :: (fd: i64, program: cstr){
    std.fdputs(1, "<Error>\n");    
}

write_code_to_filename :: (filename: *i8, code_list: *ll_list)
{
    
    // Open the file
    out: *FILE = std.fopen(filename, "w")
    if not out.is_open() {
        std.puts("Couldn't open the file.\n")
        exit(1)
    }

    code_node: mut *ll_node = code_list.head
    while code_node.value 
    {
        std.fputs(out, code_node.value)            
        code_node = code_node.next
    }
}


main :: (argc: i64, argv: *cstr){                                                    
}