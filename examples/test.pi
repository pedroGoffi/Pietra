String :: struct {
    data: *i8
    size: i64
}

impl String {    
    init :: (self: *Self, str: *i8){
        self.data = str
        self.size = 0;
        while not(self.data[self.size] == 0) self.size = self.size + 1;                
    }

    
    cout :: (self: *Self) {
        syscall(self.size, self.data, 1, 1)
    }
    base :: (self: *Self): Self {
        return *self;
    }
}

impl i64 {
    add :: (self: *Self, other: Self){
        *self = *self + other;        
    }
}
main :: (){
    x: i64 = 20;
    x.add(20)
    dump(x)
}
