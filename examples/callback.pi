SYS_WRITE :: 1

strlen  :: proc (str1: cstr): i64 {
    len: i64 = 0
    iter: *i8 = str1
    while *iter {        
        len = len + 1
        iter = iter + 1
        
    }
    return len
}

sys_write :: (len: i64, ptr: *null, file: i64 ): i64 {
    __syscall(len, ptr, file, SYS_WRITE)
        
}
puts :: proc (pstr: cstr): null  
    sys_write(strlen(pstr), pstr, 1)



callback :: (msg: cstr): i64{
    puts("i am a callback saying: ")
    puts(msg)
}
pass_x :: (func: i64){}
pass_y :: (func: **i64){
    *func
}
pass_c :: (func: **null, message: cstr): i64 {
    (((((((((((((((((func)))))))))))))))))((((((((((((message))))))))))))
}


main :: (){        
    pass_c(&callback, "Hello, world!\n")        
}
