#package "pietra.file"
use std{std, errno}


S_ISUID     :: 0x4000   
S_ISGID     :: 0x2000
S_ISVTX     :: 0x1000
S_IREAD     :: 0x400 // [Owner]: Read permission 
S_IWRITE    :: 0x200 // [Owner]: Write permission 
S_IEXEC     :: 0x100 // [Owner]: Exec permission 

FILE :: {
    start:  mut *i8
    end:    mut *i8
    ptr:    mut *i8
    size:   mut i64
    fd:     mut i64
    flags:  mut i64
    mode:   mut i64    
}

O_RDONLY  :: 000   
O_WRONLY  :: 001   
O_RDWR    :: 0x2   
O_CREAT   :: 0100 
O_EXCL    :: 0200 
O_TRUNC   :: 1000
O_APPEND  :: 2000

impl std {    
    fopen :: (filename: imut *i8, _flags: imut *i8): *FILE {
        // NOTE: to avoid _flags param ptr destruction
        flags: cstr = _flags;
        // TODO: parse flags
        mode: i64 = 0;
        file_flags: i64 = 256;

        if std.streq(flags, "r") {
            mode = mode | O_RDONLY;
        }

        
        f: *FILE = std.allocate(sizeof(FILE));

        f.fd = open(filename, mode, file_flags)

        f.ptr   = std.allocate(4096)
        f.size  = read(f.fd, f.ptr, 4096)
        f.start = f.ptr
        f.end   = f.start + f.size
        f.mode  = mode
        f.flags = file_flags
        return f;        
    }

    fclose :: (file: *FILE){
        close(file.fd);
    }
}
