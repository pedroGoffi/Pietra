#package "std.variadic.args"
use std{std}



Vararg :: {
  rbp:        mut *any
  ptr:        mut *any    
}

va_set_rbp :: (this: *Vararg, rbp: *any) {
    this.rbp = rbp
    this.ptr = this.rbp
    this.ptr = this.ptr + 8   
}


va_has :: (this: *Vararg){ return *this.ptr != &__VA_END__ }

va_next :: (this: *Vararg, nbytes: i64): mut *any {
  if !va_has(this) return 0
  this.ptr = this.ptr + nbytes
  if !va_has(this) return 0
  return this.ptr
}

va_from_rbp :: (rbp: *any): *Vararg {
  va: *Vararg = new Vararg
  va_set_rbp(va, rbp)
  return va
}

VA_INIT :: va_from_rbp(GET_RBP)